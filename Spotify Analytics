--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 


--1. What is the average danceability of all the songs by artist?

SELECT artist_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--2. Who are the top 10 artists based on the average popularity of all their songs?

SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;

--3. Which artist released the longest song, what is the song title, and how long is it?

SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY MAX(duration_ms) desc
LIMIT 1;

--4. How many songs does each artist have in the top 50 songs list?

SELECT artist_name, COUNT(*) 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(*) > 0;

--5. Of the top 10 most popular songs, how many songs have instrumentals?

SELECT track_name, instrumentalness, popularity
FROM BIT_DB.Spotifydata
WHERE instrumentalness > 0
ORDER BY popularity desc
LIMIT 10;

--6. Which song has the highest energy and how loud is it?

SELECT track_name, energy, loudness
FROM BIT_DB.Spotifydata
ORDER BY energy desc
LIMIT 1;

--7. How many songs have a tempo over 100?

SELECT track_name
FROM BIT_DB.Spotifydata
WHERE tempo >= 100;

--8. Which songs sounded the happiest and saddiest to listeners?

SELECT track_name, valence
FROM BIT_DB.Spotifydata
WHERE valence IN (SELECT MIN(valence) FROM BIT_DB.Spotifydata)
OR valence IN (SELECT MAX(valence) FROM BIT_DB.Spotifydata)
ORDER BY valence desc;

--9. How many songs where in differrent song keys?

SELECT song_key, COUNT(*)
FROM BIT_DB.Spotifydata
GROUP BY song_key;
